name: 🏗️ Build, Push & Deploy ✨

on:
  push:
    tags:
      - 'choremane/**/v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    env:
      PYTHON_VERSION: '3.11'
      NODE_VERSION: '18'
    steps:
      - name: 📥 Checkout Code (Choremane)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 🐍 Python setup + cache
      - name: 🐍 Setup Python & Cache Deps
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: 📦 Install Python Deps
        run: pip install -r backend/requirements.txt

      # 🌐 Node setup + cache
      - name: 🌐 Setup Node & Cache Deps
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install Node Deps
        working-directory: ./frontend
        run: npm install

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏭 Build & Push Backend
        id: build_backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            pipelinedave/choremane-api:latest
            pipelinedave/choremane-api:${{ github.sha }}

      - name: 🏭 Build & Push Frontend
        id: build_frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            pipelinedave/choremane-frontend:latest
            pipelinedave/choremane-frontend:${{ github.sha }}

      - name: 📜 Set Image Variables
        run: |
          echo "BACKEND_DIGEST=${{ steps.build_backend.outputs.digest }}" >> $GITHUB_ENV
          echo "FRONTEND_DIGEST=${{ steps.build_frontend.outputs.digest }}" >> $GITHUB_ENV
          echo "🔴 [GUESS]: BACKEND_DIGEST and FRONTEND_DIGEST set." # Just a debug line

  deploy:
    runs-on: ubuntu-24.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/choremane/')
    permissions:
      contents: write
    env:
      K3S_REPO: pipelinedave/k3s-config
    steps:
      - name: 📥 Checkout k3s-config Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.K3S_REPO }}
          token: ${{ secrets.K3S_CONFIG_TOKEN }}
          ref: main
          fetch-depth: 0

      - name: 🔧 Ensure Up-to-date Main
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git pull --rebase origin main

      - name: 🪄 Prepare Variables
        run: |
          VERSION_TAG="${GITHUB_REF#refs/tags/}"
          ENV=$(echo "${VERSION_TAG}" | cut -d '/' -f 2)
          BACKEND_IMAGE="pipelinedave/choremane-api@${BACKEND_DIGEST}"
          FRONTEND_IMAGE="pipelinedave/choremane-frontend@${FRONTEND_DIGEST}"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=$BACKEND_IMAGE" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=$FRONTEND_IMAGE" >> $GITHUB_ENV

      - name: 📝 Create Version ConfigMap
        run: |
          cat <<EOF > kustomize/choremane/version-configmap.yaml
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: choremane-version
          data:
            VERSION_TAG: "${VERSION_TAG}"
            BACKEND_IMAGE: "${BACKEND_IMAGE}"
            FRONTEND_IMAGE: "${FRONTEND_IMAGE}"
          EOF

      - name: 🔧 Update Deployment Manifests
        run: |
          sed -i "s|image: pipelinedave/choremane-api:.*|image: ${BACKEND_IMAGE}|g" "kustomize/choremane/overlays/${ENV}/api-deployment-patch.yaml" || echo "🔴 [GUESS]: No api-deployment-patch.yaml found."
          sed -i "s|image: pipelinedave/choremane-frontend:.*|image: ${FRONTEND_IMAGE}|g" "kustomize/choremane/overlays/${ENV}/frontend-deployment-patch.yaml" || echo "🔴 [GUESS]: No frontend-deployment-patch.yaml found."

      # Update the ApplicationSet to use the new VERSION_TAG in the correct environment entry
      - name: 🔧 Update ApplicationSet for Choremane
        run: |
          # We find the line after 'overlay: ${ENV}' and update 'tag:' line
          # Assuming stable formatting in apps/choremane.yaml
          sed -i "/overlay: ${ENV}/{n;n;s|tag: .*|tag: ${VERSION_TAG}|}" apps/choremane.yaml

      - name: 💾 Commit & Push Changes
        run: |
          git remote set-url origin "https://x-access-token:${{ secrets.K3S_CONFIG_TOKEN }}@github.com/${{ env.K3S_REPO }}.git"
          git add kustomize/choremane/version-configmap.yaml
          git add kustomize/choremane/overlays/${ENV}/api-deployment-patch.yaml || true
          git add kustomize/choremane/overlays/${ENV}/frontend-deployment-patch.yaml || true
          git add apps/choremane.yaml
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update ConfigMap and ${ENV} deployments for ${VERSION_TAG} with images ${{ github.sha }}"
            git push origin HEAD:main
          fi

      - name: 🏷️ Tag in k3s-config Repo
        run: |
          git tag "${VERSION_TAG}"
          git push origin "${VERSION_TAG}"
