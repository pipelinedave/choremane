name: 🏗️ Build, Push & Deploy ✨

on:
  push:
    tags:
      - 'choremane/**/v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔑 Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏭 Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            pipelinedave/choremane-api:latest
            pipelinedave/choremane-api:${{ github.sha }}

      - name: 🏭 Build and Push Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            pipelinedave/choremane-frontend:latest
            pipelinedave/choremane-frontend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-24.04
    needs: build
    if: startsWith(github.ref, 'refs/tags/choremane/')
    permissions:
      contents: write
    steps:
      - name: 📥 Checkout k3s-config repo
        uses: actions/checkout@v3
        with:
          repository: pipelinedave/k3s-config
          token: ${{ secrets.K3S_CONFIG_TOKEN }}
          ref: main
          fetch-depth: 0

      - name: 🔧 Ensure Up-to-date Main
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git pull --rebase origin main

      - name: 🪄 Prepare Variables
        run: |
          VERSION_TAG="${GITHUB_REF#refs/tags/}"
          ENV="$(echo ${VERSION_TAG} | cut -d '/' -f 2)"
          BACKEND_IMAGE="pipelinedave/choremane-api:${{ github.sha }}"
          FRONTEND_IMAGE="pipelinedave/choremane-frontend:${{ github.sha }}"
          echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=$BACKEND_IMAGE" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=$FRONTEND_IMAGE" >> $GITHUB_ENV

      - name: 📝 Create Version ConfigMap
        run: |
          cat <<EOF > version-configmap.yaml
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: choremane-version
          data:
            VERSION_TAG: "${VERSION_TAG}"
            BACKEND_IMAGE: "${BACKEND_IMAGE}"
            FRONTEND_IMAGE: "${FRONTEND_IMAGE}"
          EOF

      - name: 🔧 Update Deployment Manifests
        run: |
          sed -i "s|image: pipelinedave/choremane-api:.*|image: ${BACKEND_IMAGE}|g" "./kustomize/choremane/overlays/${ENV}/api-deployment-patch.yaml" || echo "🔴 [GUESS]: No api-deployment-patch.yaml found."
          sed -i "s|image: pipelinedave/choremane-frontend:.*|image: ${FRONTEND_IMAGE}|g" "./kustomize/choremane/overlays/${ENV}/frontend-deployment-patch.yaml" || echo "🔴 [GUESS]: No frontend-deployment-patch.yaml found."

      - name: 💾 Commit & Push Changes
        run: |
          git remote set-url origin "https://x-access-token:${{ secrets.K3S_CONFIG_TOKEN }}@github.com/pipelinedave/k3s-config.git"
          git add version-configmap.yaml || true
          git add kustomize/choremane/overlays/${ENV}/api-deployment-patch.yaml || true
          git add kustomize/choremane/overlays/${ENV}/frontend-deployment-patch.yaml || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update ConfigMap and ${ENV} deployments for ${VERSION_TAG} with images ${{ github.sha }}"
            git push origin HEAD:main
          fi

      - name: 🏷️ Tag in k3s-config Repo
        run: |
          git tag "${VERSION_TAG}"
          git push origin "${VERSION_TAG}"
