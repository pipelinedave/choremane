name: Build and Push
on:
  workflow_call:
    inputs:
      image_name:
        description: 'Full Docker image name (e.g., pipelinedave/choremane-backend)'
        required: true
        type: string
      image_tag:
        description: 'Docker image tag'
        required: true
        type: string
      context:
        description: 'Build context directory'
        required: true
        type: string
      dockerfile:
        description: 'Path to the Dockerfile'
        required: true
        type: string
      skip_build:
        description: 'Skip building (reuse image from staging)'
        required: false
        type: string
        default: "false"
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ inputs.image_name }}
      IMAGE_TAG: ${{ github.sha }}  # Using Git commit SHA as the tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & Push (if not skipping build)
        if: ${{ inputs.skip_build != 'true' }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest  # Optionally, tag as latest
      - name: Re-tag existing image (if skipping build)
        if: ${{ inputs.skip_build == 'true' }}
        run: |
          docker pull ${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
